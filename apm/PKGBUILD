# $Id$
# Maintainer: Nicola Squartini <tensor5@gmail.com>

pkgname=apm
pkgver=1.19.0
pkgrel=6
pkgdesc='Atom package manager'
arch=('x86_64')
url='https://github.com/atom/apm'
license=('MIT')
depends=('libsecret' 'nodejs>=10' 'npm' 'python2')
makedepends=('git')
provides=('nodejs-atom-package-manager')
conflicts=('nodejs-atom-package-manager')
replaces=('nodejs-atom-package-manager')
options=(!emptydirs)
source=("${pkgname}-${pkgver}.tar.gz::https://github.com/atom/apm/archive/v${pkgver}.tar.gz"
        'apm.js'
        'fix-tmpdir-warning.patch'
        'no-scripts.patch'
        'python2.patch'
        'use-system-npm.patch')
sha512sums=('642e7d4bd29455f56ad6e611de9a38954b8a403576620ea3684bc49c2d05f6be89e2ce37efa383cdd050e7ff6b0a6f4a14213f1256e1a6999d3789de0d621afa'
            '7ef40058bb50189729a541f8e74191336f9652f12e70118e8b24c207e42f00c8f548d408759f261d8b0f2f67f7296e38d771694e45570102e28be1e6b9788d6c'
            '151dc995a42db1cdb4d085f52f6d7d7fedb1af4eb7123b60abdec55e493d45d527d8129f46f5faeda0d7494050649ea11cd6a5f3ccb83c36ad71d5835e6262ad'
            'da2e2c6b336b87371541ef159201f6942c606f7c8b212f1a610a8605bb08ddc97ed1ade7f1c02339c40c40f22d8a7d37b1686fb5c7105a775fa85ff6048162dc'
            '2fedcfc04c03059429c231c5bbd3d5e4b32a30ea9d341c3e27dcbba0deee1e4c8d27d993c59ee96aebf0a0c930b7cc55177e3600c18349dd2b91ebac7bd96632'
            'f07c0bc1d31d8b6d237621cde024ebf538901fd7ea61801a7c50b5be84e2adf9da72eccc68d7bea0d8b0193d750ebde7de30a572f2e286194cb5c4f6f0d2a3f3')

_apmdir='/usr/lib/node_modules/atom-package-manager'

prepare() {
  rm -rf "${srcdir}"/apm-build

  cd apm-${pkgver}

  # Use custom launcher
  rm bin/apm{,.cmd} bin/npm{,.cmd}
  rm src/cli.coffee
  install -m755 "${srcdir}"/apm.js bin/apm

  # Fix os.tmpDir() deprecation warning
  patch -Np1 -i "${srcdir}"/fix-tmpdir-warning.patch

  # Use system npm and node-gyp
  patch -Np1 -i "${srcdir}"/use-system-npm.patch

  # Don't download binary Node
  patch -Np1 -i "${srcdir}"/no-scripts.patch
  rm BUNDLED_NODE_VERSION script/*

  # GYP needs Python2
  patch -Np1 -i "${srcdir}"/python2.patch
}

build() {
  cd apm-${pkgver}

  npm install coffee-script
  ./node_modules/.bin/coffee -c --no-header -o lib src/*.coffee
  rm -r node_modules
  npm install --user root -g --prefix="${srcdir}"/apm-build/usr $(npm pack | tail -1)
}

package() {
  cp -r "${srcdir}"/apm-build/usr "${pkgdir}"

  cd "${pkgdir}"${_apmdir}
  install -m644 "${srcdir}"/apm-${pkgver}/README.md ./

  # Install license file
  install -d -m755 "${pkgdir}/usr/share/licenses/${pkgname}"
  ln -s ../../../lib/node_modules/atom-package-manager/LICENSE.md \
     "${pkgdir}/usr/share/licenses/${pkgname}"

  # Remove occurrences of ${srcdir}
  find "${pkgdir}" -name "package.json" \
       -exec sed -e "s|${srcdir}/apm-build||" \
                 -e "s|${srcdir}/apm-${pkgver}|${_apmdir}|" \
                 -i '{}' \;

  # Remove useless stuff
  find "${pkgdir}"/usr/lib \
      -name ".*" -prune -exec rm -r '{}' \; \
      -or -name "*.a" -exec rm '{}' \; \
      -or -name "*.bat" -exec rm '{}' \; \
      -or -name "*.mk" -exec rm '{}' \; \
      -or -path "*/git-utils/binding.gyp" -exec rm '{}' \; \
      -or -path "*/git-utils/src" -prune -exec rm -r '{}' \; \
      -or -path "*/keytar/binding.gyp" -exec rm '{}' \; \
      -or -path "*/keytar/src" -prune -exec rm -r '{}' \; \
      -or -path "*/oniguruma/binding.gyp" -exec rm '{}' \; \
      -or -path "*/oniguruma/src" -prune -exec rm -r '{}' \; \
      -or -name "appveyor.yml" -exec rm '{}' \; \
      -or -name "benchmark" -prune -exec rm -r '{}' \; \
      -or -name "binding.Makefile" -exec rm '{}' \; \
      -or -name "config.gypi" -exec rm '{}' \; \
      -or -name "deps" -prune -exec rm -r '{}' \; \
      -or -name "doc" -prune -exec rm -r '{}' \; \
      -or -name "html" -prune -exec rm -r '{}' \; \
      -or -name "Makefile" -exec rm '{}' \; \
      -or -name "man" -prune -exec rm -r '{}' \; \
      -or -name "obj.target" -prune -exec rm -r '{}' \; \
      -or -name "samples" -prune -exec rm -r '{}' \; \
      -or -name "scripts" -prune -exec rm -r '{}' \; \
      -or -name "test" -prune -exec rm -r '{}' \; \
      -or -name "tests" -prune -exec rm -r '{}' \;
}
