# Maintainer: Nicola Squartini <tensor5@gmail.com>

pkgname=atom
pkgver=1.37.0
pkgrel=2
pkgdesc='A hackable text editor for the 21st Century'
arch=('x86_64')
url='https://github.com/atom/atom'
license=('MIT' 'custom')
depends=('apm' 'electron' 'libxkbfile')
makedepends=('git' 'npm')
optdepends=('ctags: symbol indexing support'
            'git: Git and GitHub integration')
replaces=('atom-editor')
options=(!emptydirs)
source=("${pkgname}-${pkgver}.tar.gz::https://github.com/atom/atom/archive/v${pkgver}.tar.gz"
        'atom.js'
        'buffer.patch'
        'dugite-use-system-git.patch'
        'electron-3.patch'
        'fix-atom-sh.patch'
        'fix-license-path.patch'
        'fix-restart.patch'
        'node-env-production.patch'
        'no-unsafe-eval-warning.patch'
        'symbols-view-use-system-ctags.patch'
        'use-system-apm.patch'
        'use-system-electron.patch')
sha256sums=('52b498d3a0e2d524d6b74738a21e7ab2f5ef899e4fcc251a8ccbd4796a3d6c21'
            'cdf87ab82cfcf69e8904684c59b08c35a68540ea16ab173fce06037ac341efcd'
            '971e4575884a0d1bf4683b5c6402a3d6059e41345cc09db83df5a0a30ad41bb6'
            '530b46d31df0f5e8f5881e1608a66fe75d549092a6db2e72ba3ad69c48714153'
            '75a672adc0237ea8c93ff67d8296eb73b87792b7b58cdaef7bf596fb6edd073f'
            '3ce4f665a1e3484bb408a665500a8f99d8afb5e3cd9d70374c5f9f4a37176e42'
            'a83101948752153d0f357798b9651a5262232ec3dce5f4eb5cc136a5e0b6f929'
            '2219fed30a0aca7dbed3b5f4781be23aecf965c42e5fcec0b34c9611bad11ae0'
            '9073d3947f11e21788f0931021e4f41d01e3651cc99f2b3320626f478e26c491'
            '78941a3415c18e1b8cb6ea5f20f5afe9b35e09ad155ecda02beb114b979b14b4'
            '3c68e6b3751313e1d386e721f8f819fb051351fb2cf8e753b1d773a0f475fef8'
            '53f43c9328a66e24b3467a0a06d9dfde83475f7e54251bf7a523beafaa043806'
            '0d6c12bdbe1cfae67df0b4c8948068277aa68b1c490f39d9a03fde53fd6ecd3f')

prepare() {
  cd "${srcdir}/${pkgname}-${pkgver}"

  patch -Np1 -i "${srcdir}"/buffer.patch
  patch -Np1 -i "${srcdir}"/fix-atom-sh.patch
  patch -Np1 -i "${srcdir}"/use-system-electron.patch
  patch -Np1 -i "${srcdir}"/use-system-apm.patch
  patch -Np1 -i "${srcdir}"/fix-license-path.patch
  patch -Np1 -i "${srcdir}"/fix-restart.patch
  patch -Np1 -i "${srcdir}"/node-env-production.patch
  patch -Np1 -i "${srcdir}"/no-unsafe-eval-warning.patch

  # Fix for Electron 3
  patch -Np1 -i "${srcdir}"/electron-3.patch
}

build() {
  cd "${srcdir}/${pkgname}-${pkgver}"

  # Fix for Electron 3
  npm install --package-lock-only @atom/nsfw@1.0.20 node-abi

  rm package-lock.json

  ATOM_RESOURCE_PATH="${PWD}" \
  npm_config_build_from_source=true \
  npm_config_target=$(< /usr/lib/electron/version) \
  apm install

  # Use system ctags
  cd node_modules/symbols-view
  patch -Np1 -i "${srcdir}"/symbols-view-use-system-ctags.patch
  rm -r vendor
  cd ../..

  # Use system git
  cd node_modules/dugite
  patch -Np1 -i "${srcdir}"/dugite-use-system-git.patch
  rm -r git
  cd ../..

  cd script
  npm install
  # Set ELECTRON_VERSION (see use-system-electron.patch)
  env ELECTRON_VERSION=$(< /usr/lib/electron/version) ./build --no-bootstrap
}

package() {
  cd "${srcdir}/${pkgname}-${pkgver}"

  install -d -m 755 "${pkgdir}"/usr/lib
  cp -r out/app "${pkgdir}"/usr/lib/atom
  install -m 644 out/startup.js "${pkgdir}"/usr/lib/atom
  install -m 755 "${srcdir}/atom.js" "${pkgdir}"/usr/lib/atom/atom

  install -d -m 755 "${pkgdir}/usr/share/applications"
  sed -e "s|<%= appName %>|Atom|" \
      -e "s/<%= description %>/${pkgdesc}/" \
      -e "s|<%= installDir %>|/usr|" \
      -e "s|<%= appFileName %>|atom|" \
      -e "s|<%= iconPath %>|atom|" \
      resources/linux/atom.desktop.in > "${pkgdir}/usr/share/applications/atom.desktop"

  for size in 16 24 32 48 64 128 256 512 1024; do
    install -D -m 644 resources/app-icons/stable/png/${size}.png \
            "${pkgdir}"/usr/share/icons/hicolor/${size}x${size}/apps/atom.png
  done
  ln -sf ../../../share/icons/hicolor/1024x1024/apps/atom.png \
      "${pkgdir}"/usr/lib/atom/resources/atom.png

  install -D -m 755 atom.sh "${pkgdir}/usr/bin/atom"

  install -d -m 755 "${pkgdir}/usr/share/licenses/${pkgname}"
  node -e "require('./script/lib/get-license-text')().then((licenseText) => require('fs').writeFileSync('${pkgdir}/usr/share/licenses/${pkgname}/LICENSE.md', licenseText))"

  # Remove useless stuff
  find "${pkgdir}"/usr/lib/atom/node_modules \
      -name "*.a" -exec rm '{}' \; \
      -or -name "*.bat" -exec rm '{}' \; \
      -or -name "*.c" -exec rm '{}' \; \
      -or -name "*.cpp" -exec rm '{}' \; \
      -or -name "*.node" -exec chmod a-x '{}' \; \
      -or -name "benchmark" -prune -exec rm -r '{}' \; \
      -or -name "doc" -prune -exec rm -r '{}' \; \
      -or -name "html" -prune -exec rm -r '{}' \; \
      -or -name "man" -prune -exec rm -r '{}' \; \
      -or -name "scripts" -prune -exec rm -r '{}' \; \
      -or -path "*/less/gradle" -prune -exec rm -r '{}' \; \
      -or -path "*/task-lists/src" -prune -exec rm -r '{}' \;
}
