--- a/build/lib/git-environment.js
+++ b/build/lib/git-environment.js
@@ -8,14 +8,7 @@
  *  returns with it after resolving it as a path.
  */
 function resolveGitDir() {
-    if (process.env.LOCAL_GIT_DIRECTORY) {
-        return path.resolve(process.env.LOCAL_GIT_DIRECTORY);
-    }
-    else {
-        const s = path.sep;
-        return path.resolve(__dirname, '..', '..', 'git')
-            .replace(/[\\\/]app.asar[\\\/]/, `${s}app.asar.unpacked${s}`);
-    }
+    return '/usr';
 }
 /**
  *  Find the path to the embedded Git binary.
@@ -42,7 +35,7 @@
     }
     const gitDir = resolveGitDir();
     if (process.platform === 'darwin' || process.platform === 'linux') {
-        return path.join(gitDir, 'libexec', 'git-core');
+        return path.join(gitDir, 'lib', 'git-core');
     }
     else if (process.platform === 'win32') {
         return path.join(gitDir, 'mingw64', 'libexec', 'git-core');
@@ -89,10 +82,6 @@
         // an arbitrary location, you should set PREFIX for the
         // process to ensure that it knows how to resolve things
         env.PREFIX = gitDir;
-        // bypass whatever certificates might be set and use
-        // the bundle included in the distribution
-        const sslCABundle = `${gitDir}/ssl/cacert.pem`;
-        env.GIT_SSL_CAINFO = sslCABundle;
     }
     return { env, gitLocation };
 }
