--- a/chromiumcontent/BUILD.gn
+++ b/chromiumcontent/BUILD.gn
@@ -36,7 +36,7 @@ group("targets") {
     ]
 
     if (is_linux) {
-      deps += [ "//chrome/browser/ui/libgtkui:libgtk2ui" ]
+      deps += [ "//chrome/browser/ui/libgtkui:libgtk3ui" ]
     }
 
     if (is_component_build) {
@@ -158,13 +158,13 @@ if (is_electron_build && is_component_build) {
     static_library("libgtkui") {
       complete_static_lib = true
       sources = [
-        "$root_out_dir/obj/chrome/browser/ui/libgtkui/libgtk2ui/app_indicator_icon.o",
-        "$root_out_dir/obj/chrome/browser/ui/libgtkui/libgtk2ui/app_indicator_icon_menu.o",
-        "$root_out_dir/obj/chrome/browser/ui/libgtkui/libgtk2ui/gtk_util.o",
-        "$root_out_dir/obj/chrome/browser/ui/libgtkui/libgtk2ui/gtk_status_icon.o",
-        "$root_out_dir/obj/chrome/browser/ui/libgtkui/libgtk2ui/menu_util.o",
-        "$root_out_dir/obj/chrome/browser/ui/libgtkui/libgtk2ui/skia_utils_gtk.o",
-        "$root_out_dir/obj/chrome/browser/ui/libgtkui/libgtk2ui/unity_service.o",
+        "$root_out_dir/obj/chrome/browser/ui/libgtkui/libgtk3ui/app_indicator_icon.o",
+        "$root_out_dir/obj/chrome/browser/ui/libgtkui/libgtk3ui/app_indicator_icon_menu.o",
+        "$root_out_dir/obj/chrome/browser/ui/libgtkui/libgtk3ui/gtk_util.o",
+        "$root_out_dir/obj/chrome/browser/ui/libgtkui/libgtk3ui/gtk_status_icon.o",
+        "$root_out_dir/obj/chrome/browser/ui/libgtkui/libgtk3ui/menu_util.o",
+        "$root_out_dir/obj/chrome/browser/ui/libgtkui/libgtk3ui/skia_utils_gtk.o",
+        "$root_out_dir/obj/chrome/browser/ui/libgtkui/libgtk3ui/unity_service.o",
       ]
     }
   }
--- a/chromiumcontent/args/static_library.gn
+++ b/chromiumcontent/args/static_library.gn
@@ -1,13 +1,25 @@
 root_extra_deps = [ "//chromiumcontent:chromiumcontent" ]
 is_electron_build = true
 is_component_build = false
-symbol_level = 2
+symbol_level = 0
 enable_nacl = false
 enable_widevine = true
 proprietary_codecs = true
 is_component_ffmpeg = true
 ffmpeg_branding = "Chrome"
 v8_promise_internal_field_count = 1  # https://github.com/nodejs/node/pull/13242
+clang_base_path = "/usr"
+clang_use_chrome_plugins = false
+fatal_linker_warnings = false
+treat_warnings_as_errors = false
+fieldtrial_testing_like_official_build = true
+remove_webcore_debug_symbols = true
+link_pulseaudio = true
+linux_use_bundled_binutils = false
+use_cups = true
+use_gconf = false
+use_gtk3 = true
+use_sysroot = false
 
 # CFI is disabled for the time being, as Electron is not a monolithic binary
 # with at least one shared library component (Node) and CFI is tricky in that
--- a/patches/010-build_gn.patch
+++ b/patches/010-build_gn.patch
@@ -31,24 +31,6 @@ index d055e705627c..a52003f1b5e1 100644
  ]
  if (is_win) {
    default_compiler_configs += [
-diff --git a/build/config/compiler/BUILD.gn b/build/config/compiler/BUILD.gn
-index 3b77c055108b..10dab62c2878 100644
---- a/build/config/compiler/BUILD.gn
-+++ b/build/config/compiler/BUILD.gn
-@@ -485,11 +485,11 @@ config("compiler") {
-       # For Full LTO, it provides a measurable runtime speedup of Chrome.
-       cflags += [
-         "-flto",
--        "-fwhole-program-vtables",
-+        # "-fwhole-program-vtables",
-       ]
-       ldflags += [
-         "-flto",
--        "-fwhole-program-vtables",
-+        # "-fwhole-program-vtables",
-       ]
- 
-       # Apply a lower LTO optimization level as the default is too slow.
 diff --git a/build/config/win/BUILD.gn b/build/config/win/BUILD.gn
 index 5e1f7fcc4d83..15723e6b7184 100644
 --- a/build/config/win/BUILD.gn
--- a/script/update
+++ b/script/update
@@ -294,7 +294,7 @@ def run_gn(target_arch, defines):
     if sys.platform in ['win32', 'cygwin']:
       args += ' use_experimental_allocator_shim=false'
     if sys.platform == 'linux2':
-      args += ' use_gtk3=false'
+      args += ' use_gtk3=true'
       if target_arch == 'mips64el':
         args += ' clang_use_chrome_plugins=false'
         args += ' enable_hangout_services_extension=true'
@@ -321,7 +321,7 @@ def run_gn(target_arch, defines):
       if target_arch == 'mips64el':
         args += ' is_debug=false'
       else:
-        args += ' is_official_build=true'
+        args += ' is_debug=false'
 
     output_dir = get_output_dir(SOURCE_ROOT, target_arch, component)
     subprocess.call([gn, 'gen', os.path.relpath(output_dir, SRC_DIR), '--args=' + args],
